系统是指你打算开发的任何事物，他可能是软件、硬件或者过程；
项目是指为了建立一个系统而做的所有事情，包括指定计划、安排进度以及归档等。



确定系统边界

系统边界通俗点来说就是将项目分割成系统内的和系统外的，系统内的在以后的项目进展中我们必须为创建他们而投入大量的精力，系统外的我们不需要创建，但是需要我们考虑与他们的接口。

通常我们将系统外部与系统内部交互的的事物统称为执行者，执行者是同系统交互的所有事物，执行者总是在我的系统之外，从来就不是我的系统的一部分，每一个执行者都对应一种特定的角色，每一个系统之外的实体对应多种执行者，就好比一个人在系统中他会有多种角色一样，又或者几个人可以用一个执行者来表示，因为他们对于系统来讲属于同一个的角色。

只要能回答一下几个问题，就能寻找到系统的执行者。

谁使用这个系统？

谁安装系统？

谁启动系统？

谁维护系统？

谁关闭系统？

哪些其他的系统使用这个系统？

谁从这个系统获取信息？

谁为这个系统提供信息？

是否有事情自动在预计的时间发生？

顺着执行者这个藤想要摸到瓜确定系统内部


1、找出系统有什么；系统外有什么；确定项目规模，定义要创建系统那些部分。
2、通过确定执行者和用例来确定系统边界。
3、确定执行者：谁使用这个系统，谁安装这个系统,谁启动这个系统，谁维护这个系统，谁关闭这个系统，那些系统使用这个系统，谁从这个系统获取信息，系统为谁提供信息，是否有事情在预计时间自动发生？.....提问的方式最好针对参与者的目标。因为用例建模的观点就是寻找特定参与者及其目标。
4、确定执行者使用的用例：
5、用例是一种系统执行的一系列活动，执行者执行它产生一种可估量（量化）的结果。什么样子才是可量化？一般指用例执行后的结果是具有持久性，稳定性的数据。
6、确定用例：执行者希望系统提供什么样功能？系统存储，创建，更新或删除什么信息？系统是否需要把自身的状态变化通知给执行者？系统必须知道哪些外部的事件？执行者怎样通知系统这些事件？
7、言简意骇的描述执行者和用例。
8、发现新需求问一些问题：
这些需求是必须的？是系统逻辑上必须完成的吗？是否会影响到风险分析？需求是否能被现有的执行者处理？是客户希望的系统能做的吗？会使产品在市场上变得与众不同吗？
9、系统边界确定后必须确定项目 范围：划分系统需求的优先级，确定预算。







